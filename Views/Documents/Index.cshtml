@model OrgDocs.Models.DocFiltersVM

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Documentations</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Documents" asp-action="Index" method="get">
    <p>
        Filters:
        <select name="docCategory" asp-items="Model.Categories">
            <option value="">All Categories</option>
        </select>

        <select name="docDept" asp-items="Model.Depts">
            <option value="">All Depts</option>
        </select>

      
        <input placeholder="Title" type="text" name="SearchString" />

        <input type="submit" value="Filter" />



    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                
               <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParam"]"
                  asp-route-currentFilter="@ViewData["CurrentFilter"]"
                  >
                   Title
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["LastUpdateSortParam"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Last Update
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Documents[0].Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Documents[0].Dept)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Documents[0].PdfUrl)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Documents) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastUpdate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Dept.Department)
            </td>
            <td>
               <a target="_blank" href="@Html.DisplayFor(modelItem => item.PdfUrl)">View Document</a>
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.Documents.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Documents.HasNextPage ? "disabled" : "";

}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.Documents.PageIndex -1)"
   asp-route-currentFilter ="@ViewData["CurentFilter"]"
   class="btn btn-default @prevDisabled">
   Previous
</a>

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.Documents.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>