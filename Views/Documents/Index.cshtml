@model OrgDocs.Models.DocFiltersVM
@using OrgDocs.Utility

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<h4 class="text-center">Documentations</h4>

@if (this.User.IsInRole(SD.Role_Admin))
{
<p class="text-right">
    <a class="btn btn-outline-light" asp-action="Create">Add New Document</a>
</p>
}

<form asp-controller="Documents" asp-action="Index" method="get" class="form-group">
    <p>
        <div class="row">
            <div class="col">
                <select class="form-control" name="catFilter" asp-items="Model.Categories">
                    <option value="">All Categories</option>
                </select>
            </div>
            <div class="col">
                <select class="form-control" name="deptFilter" asp-items="Model.Depts">
                    <option value="">All Depts</option>
                </select>
            </div>
            <div class="col">
                <input class="form-control" placeholder="Title" type="text" value="@ViewData["CurrentFilter"]" name="SearchString" />
            </div>
            <div class="col">
                <input class="btn btn-primary" type="submit" value="Filter" />
            </div>
        </div>


    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>

                <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParam"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   asp-route-deptFilter="@ViewData["DeptFilter"]"
                   asp-route-catFilter="@ViewData["CatFilter"]">
                    Title
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["LastUpdateSortParam"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   asp-route-deptFilter="@ViewData["DeptFilter"]"
                   asp-route-catFilter="@ViewData["CatFilter"]">
                    Last Update
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Documents[0].Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Documents[0].Dept)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Documents[0].PdfUrl)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Documents)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastUpdate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Dept.Department)
                </td>
                <td>
                    <a target="_blank" href="@Html.DisplayFor(modelItem => item.PdfUrl)">View Document</a>
                </td>
                <td>
                    <div class="row">


                        @if (this.User.IsInRole(SD.Role_Admin) || this.User.IsInRole(SD.Role_Employee))
                        {
                            <div class="col">
                                <a asp-action="Details" asp-route-id="@item.Id"><i class="fas fa-info"></i></a>
                            </div>
                            <div class="col">
                                <a asp-action="Delete" asp-route-id="@item.Id"><i class="far fa-trash-alt"></i></a>
                            </div>
                            <div class="col">
                                <a asp-action="Edit" asp-route-id="@item.Id"><i class="far fa-edit"></i></a>
                            </div>
                            <div class="col">

                                <form asp-action="Subscribe">
                                    <input name="documentID" value="@item.Id" hidden />
                                    <input name="userID" value="@ViewData["UserID"]" hidden />
                                    @if (item.Subscriptions.Count(item => item.ApplicationUserID == (string)(ViewData["UserID"])) > 0)
                                    {

                                        <button style="width:91.6px" class="btn btn-sm btn-outline-danger btn-sub" type="submit">Unsubscribe</button>

                                    }
                                    else
                                    {



                                        <button style="width:91.6px" class="btn btn-sm btn-outline-light btn-sub" type="submit">Subscribe</button>

                                    }
                                </form>
                                </div>
                        }
                    </div>


                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.Documents.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Documents.HasNextPage ? "disabled" : "";

}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.Documents.PageIndex -1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-deptFilter="@ViewData["DeptFilter"]"
   asp-route-catFilter="@ViewData["CatFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.Documents.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-deptFilter="@ViewData["DeptFilter"]"
   asp-route-catFilter="@ViewData["CatFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>